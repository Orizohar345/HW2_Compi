

%{
	#include "attributes.h"
	#include <iostream>
	#include <stdlib.h>
	typedef enum { OP_AND, OP_OR } opType;

	using namespace std;

	extern int yylex();
	int yyerror(const char * message);
%}

%token VOID INT BYTE B BOOL TRUE FALSE RETURN IF ELSE WHILE BREAK CONTINUE SC LPAREN RPAREN LBRACE RBRACE ID NUM STRING
%right ASSIGN
%left AND
%left OR
%left RELOP_EQ
%left RELOP_REL
%left BINOP_ADD
%left BINOP_MULT
%right NOT

%%

Program         :       Statements;
Statements      :       Statement
                |       Statements Statement
                ;
Statement       :       LBRACE Statements RBRACE
                |       Type ID SC
                |       TYPE ID ASSIGN Exp SC
                |       ID ASSIGN Exp SC
                |       Call SC
                |       IF LPAREN Exp RPAREN Statement
                |       IF LPAREN Exp RPAREN Statement ELSE Statement
                |       WHILE LPAREN Exp RPAREN Statement
                |       BREAK SC
                |       CONTINUE SC
                ;
Call            :       ID LPAREN Exp RPAREN;
Type            :       INT
                |       TYPE
                |       BOOL
                ;
Exp             :       LPAREN Exp RPAREN
                |       Exp BINOP Exp
                |       ID
                |       Call
                |       NUM
                |       NUM B
                |       STRING
                |       TRUE
                |       FALSE
                |       NOT Exp
                |       Exp AND Exp
                |       Exp OR Exp
                |       Exp RELOP Exp
                |       LPAREN Type RPAREN Exp
BINOP:          :       BINOP_ADD;
                |       BINOP_MULT;
                ;
RELOP           :       RELOP_EQ
                |       RELOP_REL
                ;
%%

int main()
{
	yyparse();
}

int yyerror(const char * message)
{
	cout<<"Parse error: "<<message<<endl;
	exit(0);
}
